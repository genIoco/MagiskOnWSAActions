name: Build WSA

on:
  workflow_dispatch:
    inputs:
      arch:
        description: "Build arch"
        required: true
        default: "x64"
        type: choice
        options:
          - x64
          - arm64
      release_type:
        description: "WSA release type"
        required: true
        default: "retail"
        type: choice
        options:
          - retail
          - release preview
          - insider slow
          - insider fast
      root_sol:
        description: "Root solution"
        required: true
        default: "magisk"
        type: choice
        options:
          - magisk
          - none
      magisk_ver:
        description: "Magisk version"
        required: true
        default: "stable"
        type: choice
        options:
          - stable
          - beta
          - canary
          - debug
      install_gapps:
        description: "Install GApps"
        required: true
        default: "yes"
        type: choice
        options:
          - yes
          - no
      remove_amazon:
        description: "Remove Amazon AppStore"
        required: true
        default: "yes"
        type: choice
        options:
          - yes
          - no
      compress_format:
        description: "Compress format"
        required: true
        default: "7z"
        type: choice
        options:
          - 7z
          - zip
          - none

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Generate build matrix
        id: set-matrix
        uses: actions/github-script@v6
        with:
          script: |
            let matrix = {};

            let remove_amazon = "${{ github.event.inputs.remove_amazon }}"
            switch ( remove_amazon ) {
              case "true":
                matrix.remove_amazon = ["--remove-amazon"];
                break;
              case "false":
                matrix.remove_amazon = [""];
                break;
            }

            let install_gapps = "${{ github.event.inputs.install_gapps }}"
            switch (install_gapps){
              case "true":
                matrix.install_gapps = ["--install-gapps"];
                break;
              case "false":
                matrix.install_gapps = [""];
                break;
            }

            let release_type = "${{ github.event.inputs.release_type }}"
            switch (release_type){
              case "retail":
                matrix.release_type = [ "retail"];
                break;
              case "release preview":
                matrix.release_type = [ "RP"];
                break;
              case "insider slow":
                matrix.release_type = [ "WIS"];
                break;
              case "insider fast":
                matrix.release_type = [ "WIF"];
                break;
            }
            core.setOutput("matrix",JSON.stringify(matrix));
  build:
    name: Build WSA
    runs-on: ubuntu-latest
    needs: matrix
    strategy:
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          ./scripts/install_deps.sh

      - name: Build WSA
        run: |
          ./scripts/build.sh --arch ${{ github.event.inputs.arch }} --release-type ${{ matrix.release_type }} --root-sol ${{ github.event.inputs.root_sol }} --magisk-ver ${{ github.event.inputs.magisk_ver }} ${{ matrix.install_gapps }} ${{matrix.remove_amazon}} --compress-format ${{ github.event.inputs.compress_format }}

      - name: Upload WSA
        uses: actions/upload-artifact@v3
        with:
          path: "./output/*"
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0
